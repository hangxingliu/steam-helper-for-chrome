(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f;}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e);},l,l.exports,e,t,n,r);}return n[o].exports;}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s;})({1:[function(require,module,exports){(function(global){let{log,error}=require('./utils/logger').init('store-prod-page.js'),{$,prependDivInElement}=require('./utils/dom'),{getDateString}=require('./utils/datetime'),Steam=require('./utils/steam');const COUNTRY='cn';global.app=new App();function App(){let container=$('#game_area_purchase').expect(1).get();let appId=Steam.getAppIdFromURL(location.href),steamDBLink=Steam.getSteamDBLink(appId);prependDivInElement(container,`	
		<div class="game_area_purchase_game_wrapper">
			<div class="game_area_purchase_game">
				<h1>价格信息</h1>
				<div id="steamDBPriceInfo"></div>
				<div class="game_purchase_action">
					<div class="game_purchase_action_bg">
					<div class="btn_addtocart">
						<a class="btnv6_blue_blue_innerfade btn_medium" 
							target="_blank"
							href="${steamDBLink}">
							<span>Goto SteamDB</span>
						</a>
					</div>
				</div>
			</div>
		</div>`);Steam.getPriceHistory(appId,COUNTRY).then(prices=>{let ctx=getPriceDisplayContainer();ctx.style.color='green';ctx.style.fontSize='1.6em';ctx.style.marginTop='1em';ctx.innerHTML=getPriceInfo(prices);}).catch(ex=>{let ctx=getPriceDisplayContainer();ctx.style.color='red';ctx.style.fontSize='1.4em';let bd=ex;if(typeof ex!='string'&&ex)bd=`${ex.message}\n${ex.stack}`;ctx.innerHTML=`无法获取价格信息!<br/><pre><code>${bd}</code></pre>`;});}function getPriceInfo(prices){let result='';if(prices.length==0)return'<div style="color: grey;">无价格信息</div>';if(prices.length==1){return`<div style="color: #1D7FAB">
			此游戏目前只有一个价格: <b>${prices[0].price}</b><br/>
			<small>发售日期: <b>${getDateString(prices[0].from)}</b></small>
		</div>`;}let first=prices[0];let historyLowestArray=prices.slice(0,-1).sort((a,b)=>a.price-b.price);let lowestPrice=historyLowestArray[0].price;let historyLowest=historyLowestArray.filter(i=>i.price==lowestPrice).sort((a,b)=>b.from-a.from)[0];let current=prices.slice(-1)[0];let description='<div style="color: red">不是最低价, 买前三思</div>';if(first.price==current.price)description=`<div style="color: red; font-weight: bolder; font-size: 1.2em">
			原价警告!! </div >`;else if(historyLowest.price==current.price)description=`<div style="color: limegreen">最低价</div>`;else if(historyLowest.price>current.price)description=`<div style="color: green; font-weight: bolder; font-size: 1.4em">再创低价!! 好玩就入手了吧!</div>`;let lowestRange='';let t=historyLowest.from.getTime();for(let i=0;i<prices.length;i++){let p=prices[i];if(p.from.getTime()==t){lowestRange=`${getDateString(p.from)}~`;if(prices[i+1])lowestRange+=`${getDateString(prices[i+1].from)}`;break;}}return`<div style="color: white">
		<small style="color: grey">
			发售日期: ${getDateString(first.from)}</small><br/>
		历史低价: <b style="color: white">${historyLowest.price}</b> (${lowestRange})<br/>
		目前价格: <b style="color: white">${current.price}</b><br/>
		${description}
	</div>`;}function getPriceDisplayContainer(){return $('#steamDBPriceInfo').expect(1).get();}}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{});},{"./utils/datetime":2,"./utils/dom":3,"./utils/logger":4,"./utils/steam":5}],2:[function(require,module,exports){module.exports={getDateString};function getDateString(date){return`${date.getFullYear()}-${to2(date.getMonth()+1)}-${to2(date.getDate())}`;}function to2(i){return i>=10?`${i}`:`0${i}`;}},{}],3:[function(require,module,exports){let logger=require('./logger');function $(selector='',base=null){let domArray=(base||document).querySelectorAll(selector);return new DOMQueryResult(selector,domArray);}function DOMQueryResult(selector='',domArray=[]){let thiz=this,_name='';this.name=(name='')=>{_name=name;return thiz;};this.expect=(...num)=>{if(num.length==1)if(domArray.length!=num[0])return error(`expect count is ${num[0]}`);if(num.length==2)if(domArray.length<num[0]||domArray.length>=num[1])return error(`expect count is [${num[0]}, ${num[1]})`);return thiz;};this.get=(offset=0)=>domArray[offset];function error(description=''){description=`Query DOM failed, (`+`${_name?'Name: '+_name+' ':''}Selector: ${selector}, Count: ${domArray.length}) `+description;logger.error(description);throw description;}}function appendDivInElement(element,divInnerHTML=''){let div=document.createElement('div');div.innerHTML=divInnerHTML;element.appendChild(div);return element;}function prependDivInElement(element,divInnerHTML=''){let div=document.createElement('div');div.innerHTML=divInnerHTML;if(element.firstChild)element.insertBefore(div,element.firstChild);else element.appendChild(div);return element;}module.exports={$,appendDivInElement,prependDivInElement};},{"./logger":4}],4:[function(require,module,exports){const PREFIX='Steam Helper:';let debugInfos=[];let exportObject={init,log,debugInfo,error};module.exports=exportObject;function log(...p){console.log(PREFIX,...p);}function debugInfo(...p){let info=p.join(' ');debugInfos.push(info);}function error(description='',ex=null){console.error(description,ex?ex.stack||ex:'');}function init(injectScriptName){log(`${injectScriptName} has been injected!`);return exportObject;}},{}],5:[function(require,module,exports){function getAppIdFromURL(url=""){let matched=url.match(/app\/(\d+)/);if(!matched)return null;return matched[1];}function getSteamDBLink(appId=''){return`https://steamdb.info/app/${appId}/`;}function getPriceHistory(appId,country){const API='https://steamdb.info/api/GetPriceHistory/?appid={}&cc={}';let url=API.replace('{}',encodeURIComponent(appId)).replace('{}',country);return new Promise((resolve,reject)=>{let xhr=new XMLHttpRequest();xhr.open('GET',url);xhr.onload=()=>{if(xhr.readyState!=4||xhr.status!=200)return reject(`xhr.readyState = ${xhr.readyState}; `+`xhr.status = ${xhr.status};`);let object={};try{object=JSON.parse(xhr.responseText);}catch(ex){return reject('response is not json');}if(!object.success)return reject(`response.success = ${object.success};`);if(!object.data)return reject(`response.data is empty;`);if(!object.data.final)return reject(`response.data.final is empty;`);if(!object.data.formatted)return reject(`response.data.formatted is empty;`);let result=[];for(let item of object.data.final)result.push({from:new Date(item[0]),price:item[1],discount:0});let formatted=object.data.formatted;Object.keys(formatted).sort().map(k=>formatted[k]).forEach((item,i)=>{result[i].discount=item.discount;});return resolve(result);};xhr.onerror=err=>reject(err);xhr.send();});}module.exports={getSteamDBLink,getAppIdFromURL,getPriceHistory};},{}]},{},[1]);